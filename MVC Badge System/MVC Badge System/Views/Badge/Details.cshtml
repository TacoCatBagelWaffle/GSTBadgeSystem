@model MVC_Badge_System.Models.Badge

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Badge</h4>
    @if (Model.RetirementDate == null || Model.RetirementDate > DateTime.Now)
    {
        if (Model.BeginDate == null || Model.BeginDate > DateTime.Now)
        {
            @Html.ActionLink("Start", "SetBeginDate", new { id = Model.BadgeId, returnActionName = "Details", returnId = Model.BadgeId  }, new { @class = "btn btn-secondary" })
        }
        else
        {
            @Html.ActionLink("Retire", "SetRetirementDate", new { id = Model.BadgeId, returnActionName = "Details", returnId = Model.BadgeId }, new { @class = "btn btn-secondary" })
        }
        <big> | </big>
    }

    @Html.ActionLink("New Badge", "Create", null, new { @class = "btn btn-secondary" })
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Type)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SelfGive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SelfGive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StudentGive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StudentGive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StaffGive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StaffGive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FacultyGive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FacultyGive)
        </dd>
        @if (Model.BeginDate != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.BeginDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.BeginDate)
            </dd>
        }
        @if (Model.RetirementDate != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.RetirementDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.RetirementDate)
            </dd>
        }
        @if (!String.IsNullOrEmpty(Model.ImageLink))
        {
            <dt>
                @Html.DisplayNameFor(model => model.ImageLink)
            </dt>
            <dd>
                    @Html.DisplayFor(model => model.ImageLink)
            </dd>
        }
        @if (Model.Prerequisites != null && Model.Prerequisites.Count > 0)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Prerequisites)
            </dt>
            <dd>
                <ul>
                    @foreach (var item in Model.Prerequisites)
                    {
                        <li><a href="@Url.Action("Details", new { id = item.BadgeId })">@item.Name</a></li>
                    }
                </ul>
            </dd>
        }
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.BadgeId }) |
    @Html.ActionLink("Back to List", "List")
</p>
