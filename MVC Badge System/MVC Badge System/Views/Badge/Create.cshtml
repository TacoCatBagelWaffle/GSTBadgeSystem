@model MVC_Badge_System.Models.Badge

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Badge</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Type,
                 htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type,
                htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "",
                new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="container-fluid well">
            <p class="form-control-static">Who can Give:</p>
            <div class="form-group form-check">
                @Html.LabelFor(model => model.SelfGive, htmlAttributes: new { @class = "form-check-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SelfGive, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.SelfGive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-check">
                @Html.LabelFor(model => model.StudentGive, htmlAttributes: new { @class = "form-check-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentGive, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.StudentGive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-check">
                @Html.LabelFor(model => model.StaffGive, htmlAttributes: new { @class = "form-check-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StaffGive, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.StaffGive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-check">
                @Html.LabelFor(model => model.FacultyGive, htmlAttributes: new { @class = "form-check-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacultyGive, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.FacultyGive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeginDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.BeginDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RetirementDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RetirementDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.RetirementDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scriptsIncludes {
    <link rel="stylesheet" href="~/Content/bootstrap-datepicker.min.css" />
    <script src="~/Content/bootstrap-datepicker.min.js"></script>
}

@section inlineScript {

    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: "mm/dd/yyyy",
                multidate: false,
                autoclose: true,
                todayHighlight: true
            });
        });
    </script>
}